Индексы применяются для ускорения поиска по таблице.
Без них поиск производится по целой таблице, строки лежат беспорядочно в куче (heap)
Когда задействуются индексы, производится поиск по созданной ими структуре (seek)
Представленны в виде дерева со ссылками на строки.
Кластеризованные индексы строятся по одному полю, в рамках которого все строки
будут отсортированы (в памяти, физически). Алгоритм. сложность поиска - log2N
или O(h), где h - высота дерева

В некластерном индексе хранятся только значения определенного поля. Для нахождения
всех остальных атрибутов данных строк нужно каждый раз заглядывать в основную таблицу.
Поэтому сервер может решить не делать большое количество seek, используя индексы, а просто выполнить
один scan (full scan), потому что данная операция завершится быстрее.

Чтобы понимать, сколько примерно вернется строк по данному запросу, 
сервер анализирует ранеесобранную статистику по столбцам, где указана их
селективность (кол-во уникальных значений из всех). Если стобец содержит
много уникальных значений, то запрос WHERE по нему вернет мало строк (запрос высокоселективен)
и тогда стоит использовать индексы. Если запрос с низкой селективностью - скорее всего
будет произведен scan

Некластеризованные индексы (может быть много)
  - создают отдельную структуру данных
  - занимают много места (сравнимое с данными)

Синтаксис
CREATE INDEX Ind1
  ON Products (ID)
     -таблица  -поле

В некластерных индексах имеет смымсл использовать директиву INCLUDE для добавления полей
но это приведет к пропорциональному росту размера дерева индексов
.....

Кластерный индекс (только один на таблицу)
   - не занимает много места
   - лучше делать по инкрементному полю (NewID, NewSequentialID)
Синтаксис
CREATE CLUSTERED INDEX Ind1
  ON Products (ID)
     -таблица  -поле

Индексы ускоряют GROUP BY