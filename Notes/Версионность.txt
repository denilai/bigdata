Тип 0

Заключается в том, что данные после первого попадания
в таблицу далее никогда не изменяются. Этот метод практически никем
не используется, т.к. он не поддерживает версионности.
Он нужен лишь как нулевая точка отсчета для методологии SCD.


Тип 1

1 тип — это обычная перезапись старых данных новыми.
В чистом виде этот метод тоже не содержит версионности и
используется лишь там, где история фактически не нужна.
Тем не менее, в некоторых СУБД для этого типа возможно
добавить ограниченную поддержку версионности средствами самой
СУБД(например, Flashback query в Oracle) или отслеживанием
изменений через триггеры.

Достоинства:
Не добавляется избыточность
Очень простая структура

Недостатки:
Не хранит истории



Тип 2

Данный метод заключается в создании для каждой версии отдельной
записи в таблице с добавлением поля-ключевого атрибута данной
версии, например: номер версии, дата изменения или дата начала и
конца периода существования версии.

Достоинства:
Хранит полную и неограниченную историю версий
Удобный и простой доступ к данным необходимого периода

Недостатки:
Провоцирует на избыточность или заведение дополнительных таблиц
для хранения изменяемых атрибутов измерения
Усложняет структуру или добавляет избыточность в случаях, если для
аналитики потребуется согласование данных в таблице фактов с
конкретными версиями измерения и при этом факт может быть
не согласован с текущей для данного факта версией измерения.
(Например, у клиента изменились ревизиты или адрес, а нужно
провести операцию/доставку по старым значениям)


Тип 3

В самой записи содержатся дополнительные поля для предыдущих
значений атрибута. При получении новых данных, старые данные
перезаписываются текущими значениями.

Достоинства:
Небольшой объем данных
Простой и быстрый доступ к истории

Недостатки:
Ограниченная история



Тип 4

История изменений содержится в отдельной таблице:
основная таблица всегда перезаписывается текущими данными
с перенесением старых данных в другую таблицу.
Обычно этот тип используют для аудита изменений или создания
архивных таблиц(как я уже говорил, в Oracle этот же 4-й тип можно
получить из 1-го используя flashback archive).
Подтипом или гибридом этого варианта(со вторым типом), как мне
кажется, следует считать секционирование по признаку текущей
версии с разрешенным перемещением строк, но это уже за гранью
моделирования и скорее относится к администрированию.


Достоинства:
Быстрая работа с текущими версиями

Недостатки:
Разделение единой сущности на разные таблицы


Гибридный тип/Тип 6(1+2+3)

Тип 6 был придуман Ральфом Кимболлом(Ralph Kimball) как комбинация
вышеназванных методов и предназначен для ситуаций, которые они не
учитывают или для большего удобства работы с данными.
Он заключается во внесении дополнительной избыточности:
берется за основу тип 2, добавляется суррогатный атрибут для
альтернативного обзора версий(тип 3), и перезаписываются одна
или все предыдущие версии(тип 1).